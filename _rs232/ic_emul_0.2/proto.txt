
Operation rules:

All numbers encoded as little-endian.
IP address encoding: 1.2.3.4 -> 01 02 03 04.
Strings encoded as word_length+string.
Socket read operation is non-blocking.


Init algorithm:
  pause for >1 uart byte
  send some NOPs until returned values match
  if matched
    send RESET cmd
    optionally send INFO cmd
  if not matched
    no ic found

Work algorithm:
  gethostbyname cmd
  socket cmd
  bind cmd (to 0.0.0.0:0)
  connect cmd
  send/recv cmds
  close cmd





Commands:

nop
>	byte #00
>       byte test_byte
<	byte inv_test_byte

socket
>	byte #01
	byte address_family
	byte type
	byte protocol
<	byte res (0=ok)
<?	byte fd

bind
>	byte #02
	byte fd
	long my_addr
	word port
<	byte res (0=ok)

connect
>	byte #03
	byte fd
	long serv_addr
	word port
<	byte res (0=ok)


listen
>	byte #04
	byte fd
<	byte res (0=ok)?


accept
>	byte #05
	byte fd
<	byte res (0=ok)
<???


close
>	byte #06
	byte fd
<	byte res (0=ok)


select
>	byte #07
	byte fd_read_cnt
	byte fd_write_cnt
	byte fd_except_cnt
	byte fd_read[fd_read_cnt]
	byte fd_write[fd_write_cnt]
	byte fd_exc[fd_exc_cnt]
<	byte res (0=ok)
<?	byte fd_read_sig
<?	byte fd_write_sig
<?	byte fd_except_sig
<??	byte fd_read[fd_read_sig]
<??	byte fd_write[fd_write_sig]
<??	byte fd_exc[fd_exc_sig]



gethostbyname
>	byte #20
>       word name_len
>	ascii hostname
<	byte res (0=ok)
<?      long ip

gethostbyaddr
>	byte #21
	long addr
	byte type
<	byte res (0=ok)
<???




send
>	byte #10
	byte fd
	word buflen
	byte flags
<	byte res (0=ok)
>?	byte buf[buflen]
<?	word realsent (#ffff = error)



recv
>	byte #11
	byte fd
        word len
	byte flags
<	byte res (0=ok)
>?	word reallen
>??	byte buf[reallen]

sendto
>	byte #18
	byte fd
	word len
	int flags
	long to
<	byte res (0=ok)
>?	byte buf[len]
<?	word realsent

recvfrom
>	byte #19
	byte fd
	word len
<	byte res (0=ok)
>?	word reallen
>?	byte buf[reallen]
	
info
>	byte #30
<       word len
<	ascii info_line
<       word len (0=end)
<	...

reset
>	byte #F0
<	byte res (0=ok)





Todo list:

if_list

if_config

proxy_config

stats














/*
 * Types
 */
#define IC_SOCK_STREAM     1               /* stream socket */
#define IC_SOCK_DGRAM      2               /* datagram socket */
#define IC_SOCK_RAW        3               /* raw-protocol interface */


/*
 * Address families.
 */
#define IC_AF_UNSPEC       0               /* unspecified */
#define IC_AF_INET         2               /* internetwork: UDP, TCP, etc. */
#define IC_AF_INET6        23              /* Internetwork Version 6 */



